name: EKS Deployment
'on':
  workflow_dispatch: {}
  push:
    paths:
      - '**/*'
      - '!.github/badges/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Create Initial Space
        id: shared_space
        uses: ./github/shared-space
        with:
          octopus_server: ${{ secrets.OCTOPUS_SERVER }}
          octopus_apikey: ${{ secrets.OCTOPUS_APIKEY }}
          octopus_space: "<%= octopus_space %>"
          octopus_user_id: "<%= octopus_user_id %>"
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Create Shared Resources
        id: shared_resources
        uses: ./github/shared-infrastructure
        with:
          octopus_server: ${{ secrets.OCTOPUS_SERVER }}
          octopus_apikey: ${{ secrets.OCTOPUS_APIKEY }}
          octopus_space_id: ${{ steps.shared_space.outputs.octopus_space_id }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: "<%= aws_region %>"
          github_username: ${{ github.actor }}
          github_repo: ${{ github.repository }}
          github_feed_token: ${{ secrets.FEED_GITHUB_TOKEN }}

      - name: Create Kubernetes Deployment Project
        uses: ./github/kubernetes-deployment
        with:
          octopus_server: ${{ secrets.OCTOPUS_SERVER }}
          octopus_apikey: ${{ secrets.OCTOPUS_APIKEY }}
          octopus_space_id: ${{ steps.shared_space.outputs.octopus_space_id }}
          octopus_github_docker_feed_id: ${{ steps.shared_resources.outputs.octopus_github_docker_feed_id }}
          octopus_dockerhub_feed_id: ${{ steps.shared_resources.outputs.octopus_dockerhub_feed_id }}
          octopus_application_lifecycle_id: ${{ steps.shared_resources.outputs.application_lifecycle_id }}
          octopus_docker_image: "mcasperson/octopus-java-microservice"
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: "<%= aws_region %>"
          repository_owner: ${{ github.repository_owner }}

#      - name: Build Java Microservice
#        uses: ./github/java-microservice
#        with:
#          repository_owner: ${{ github.repository_owner }}
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          github_actor: ${{ github.actor }}