name: Node.js Build
'on':
  workflow_dispatch: {}
  push: {}
inputs:
  octopus_server_url:
    required: true
  octopus_api_token:
    required: true
  run_number:
    required: true
  github_token:
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: '0'
    - uses: actions/setup-node@v2
      with:
        node-version: lts/*
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x
    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        additionalArguments: /overrideconfig mode=Mainline
    - name: Install Octopus Deploy CLI
      uses: OctopusDeploy/install-octocli@v1.1.1
      with:
        version: latest
    - name: Install Dependencies
      run: npm ci
      shell: bash
    - name: List Dependencies
      run: npm list --all > dependencies.txt
      shell: bash
    - name: Collect Dependencies
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies
        path: dependencies.txt
    - name: List Dependency Updates
      run: npm outdated > dependencyUpdates.txt || true
      shell: bash
    - name: Collect Dependency Updates
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies Updates
        path: dependencyUpdates.txt
    - name: Test
      run: npm test || true
      shell: bash
    - name: Build
      run: |-
        # package.json does not define a build script, so the build command is commented out.
        # npm run build
      shell: bash
    - name: Package
      run: |-
        SOURCEPATH=.
        OUTPUTPATH=.
        # If there is a build directory, assume that is what we want to package
        if [[ -d "build" ]]; then
          SOURCEPATH=build
        fi
        octo pack \
         --basePath ${SOURCEPATH} \
         --outFolder ${OUTPUTPATH} \
         --id app-builder-frontend \
         --version ${{ steps.determine_version.outputs.semVer }} \
         --format zip \
         --overwrite \
         --include '**/*.html' \
         --include '**/*.htm' \
         --include '**/*.css' \
         --include '**/*.js' \
         --include '**/*.min' \
         --include '**/*.map' \
         --include '**/*.sql' \
         --include '**/*.png' \
         --include '**/*.jpg' \
         --include '**/*.jpeg' \
         --include '**/*.gif' \
         --include '**/*.json' \
         --include '**/*.env' \
         --include '**/*.txt' \
         --include '**/*.Procfile'
      shell: bash
    - name: Tag Release
      uses: mathieudutour/github-tag-action@v6.0
      with:
        custom_tag: ${{ steps.determine_version.outputs.semVer }}
        github_token: ${{ inputs.github_token }}
    - env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
#      id: create_release
#      name: Create Release
#      uses: actions/create-release@v1
#      with:
#        tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ inputs.run_number }}-attempt${{ inputs.run_attempt }}
#        release_name: Release ${{ steps.determine_version.outputs.semVer }} Run ${{ inputs.run_number }} Attempt ${{ inputs.run_attempt }}
#        draft: 'false'
#        prerelease: 'false'
#    - env:
#        GITHUB_TOKEN: ${{ inputs.github_token }}
#      name: Upload Release Asset
#      uses: actions/upload-release-asset@v1
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: app-builder-frontend.${{ steps.determine_version.outputs.semVer }}.zip
#        asset_name: app-builder-frontend.${{ steps.determine_version.outputs.semVer }}.zip
#        asset_content_type: application/octet-stream
#    - name: Push to Octopus
#      uses: OctopusDeploy/push-package-action@v1.1.1
#      with:
#        api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
#        packages: app-builder-frontend.${{ steps.determine_version.outputs.semVer }}.zip
#        server: ${{ secrets.OCTOPUS_SERVER_URL }}
#        overwrite_mode: OverwriteExisting
#    - name: Generate Octopus Deploy build information
#      uses: xo-energy/action-octopus-build-information@v1.1.2
#      with:
#        octopus_api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
#        octopus_project: app-builder-frontend
#        octopus_server: ${{ secrets.OCTOPUS_SERVER_URL }}
#        push_version: ${{ steps.determine_version.outputs.semVer }}
#        push_package_ids: app-builder-frontend
#        push_overwrite_mode: OverwriteExisting
#        output_path: octopus
#    - name: Create Octopus Release
#      uses: OctopusDeploy/create-release-action@v1.1.1
#      with:
#        api_key: ${{ inputs.octopus_server_url }}
#        project: app-builder-frontend
#        server: ${{ inputs.octopus_api_token }}
#        deploy_to: Development
#        packages: app-builder-frontend:${{ steps.determine_version.outputs.semVer }}