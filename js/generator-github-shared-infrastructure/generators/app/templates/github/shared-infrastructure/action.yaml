name: Docker Build and Push
inputs:
  octopus_server:
    description: 'Octopus cloud URL'
    required: true
  octopus_apikey:
    description: 'Octopus API key'
    required: true
  octopus_space_id:
    description: 'The ID of the app builder space'
    required: true
  octopus_project:
    description: 'The Octopus space and project name'
    required: true
  github_feed_token:
    description: 'The github token'
    required: true
  aws_access_key:
    description: 'The AWS access key'
    required: true
  aws_secret_key:
    description: 'The AWS secret key'
    required: true
  aws_region:
    description: 'The AWS region'
    required: true
  github_repo:
    description: 'The github repo'
    required: true
  github_username:
    description: 'The github username'
    required: true
runs:
  using: "composite"
  steps:
    - name: Clone code repo
      uses: actions/checkout@v2
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Install AWS CLI
      uses: unfor19/install-aws-cli-action@v1
    - name: Create Terraform state S3 bucket
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_key }}
      run: |
        # Check to see if the bucket exists
        aws s3api head-bucket --bucket app-builder-<%= s3_bucket_suffix %> --region <%= aws_region %> 2>/dev/null
        # If not, create it
        if [[ $? -ne 0 ]]; then        
          aws s3 mb s3://app-builder-<%= s3_bucket_suffix %> --region <%= aws_region %>
        fi
      shell: "bash -l {0}" # Allow commands to fail by removing the default "-e" argument
    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_key }}
      run: terraform init
      working-directory: terraform/shared-infrastructure
      shell: bash
    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_key }}
      run: >
        terraform apply 
        -auto-approve 
        -var="octopus_server=${{ inputs.octopus_server }}" 
        -var="octopus_apikey=${{ inputs.octopus_apikey }}"
        -var="octopus_space_id=${{ inputs.octopus_space_id }}"
        -var="github_feed_token=${{ inputs.github_feed_token }}"
        -var="aws_access_key=${{ inputs.aws_access_key }}"
        -var="aws_secret_key=${{ inputs.aws_secret_key }}"
        -var="aws_region=${{ inputs.aws_region }}"
        -var="github_repo=${{ inputs.github_repo }}"
        -var="github_username=${{ inputs.github_username }}"
      working-directory: terraform/shared-infrastructure
      shell: bash