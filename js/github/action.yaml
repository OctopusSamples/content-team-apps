name: 'Jenkins Pipeline Frontend'
inputs:
  octopus_server_url:  
    required: true
  octopus_api_token:  
    required: true
  run_number:  
    required: true
on:
  push:
  workflow_dispatch:

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v1

    - uses: nelonoel/branch-name@v1.0.1

    - name: Install Octopus Deploy CLI
      uses: OctopusDeploy/install-octocli@v1
      with:
        version: 7.4.3124

    - name: Packages
      run: yarn install
      shell: bash
      working-directory: js

    - name: Build
      run: yarn build
      shell: bash
      working-directory: js

    - name: Copy config file
      run: cp config.json build
      shell: bash
      working-directory: js

    - name: Create zip
      run: cd build; zip -r ../jenkins-pipeline-builder-github-frontend.0.1.0.${{ inputs.run_number }}.zip .
      shell: bash
      working-directory: js

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        tag_name: 0.1.${{ inputs.run_number }}
        release_name: Release 0.1.${{ inputs.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: js/jenkins-pipeline-builder-github-frontend.0.1.0.${{ inputs.run_number }}.zip
        asset_name: jenkins-pipeline-builder-github-frontend.0.1.0.${{ inputs.run_number }}.zip
        asset_content_type: application/zip

    - name: Push Package
      run: >
        octo push --package jenkins-pipeline-builder-github-frontend.0.1.0.${{ inputs.run_number }}.zip
        --server ${{ inputs.octopus_server }}
        --apiKey ${{ inputs.octopus_apikey }}
        --space "Content Team"
      shell: bash
      working-directory: js

    - name: Trigger deployment
      run: >
        octo create-release
        --project "Jenkins Pipeline Generator Frontend"
        --deployTo "Development"
        --server ${{ inputs.octopus_server }}
        --apiKey ${{ inputs.octopus_apikey }}
        --space "Content Team"
      shell: bash
      working-directory: js